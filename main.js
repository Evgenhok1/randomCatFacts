// main.js
import { Octokit } from "@octokit/rest";

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞ –ø—Ä–æ –∫–æ—Ç–æ–≤
function getRandomCatFact() {
  const facts = [
    "–ö–æ—Ç—ã —Å–ø—è—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º 70% —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏.",
    "–£ –∫–æ—Ç–æ–≤ –µ—Å—Ç—å –±–æ–ª–µ–µ 20 –º—ã—à—Ü, —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö —É—à–∞–º–∏.",
    "–ö–æ—Ç—ã –º–æ–≥—É—Ç –ø—Ä—ã–≥–∞—Ç—å –Ω–∞ –≤—ã—Å–æ—Ç—É –≤ 6 —Ä–∞–∑ –≤—ã—à–µ —Å–≤–æ–µ–≥–æ —Ä–æ—Å—Ç–∞.",
    "–ü–µ—Ä–≤—ã–π –∫–æ—Ç –≤ –∫–æ—Å–º–æ—Å–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–æ –§—Ä–∞–Ω—Ü–∏–∏ –≤ 1963 –≥–æ–¥—É.",
    "–ö–æ—à–∫–∏ –ø–æ—Ç–µ—é—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ª–∞–ø—ã."
  ];
  return facts[Math.floor(Math.random() * facts.length)];
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
function generateUniqueName() {
  const timestamp = Date.now();
  return `cat_fact_${timestamp}.txt`;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function pushRandomCatFact(repoOwner, repoName, token) {
  const octokit = new Octokit({ auth: token });

  const fact = getRandomCatFact();
  const fileName = generateUniqueName();

  try {
    await octokit.repos.createOrUpdateFileContents({
      owner: repoOwner,
      repo: repoName,
      path: fileName,
      message: `Add random cat fact: ${fact}`,
      content: Buffer.from(fact).toString("base64"),
    });

    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–∫—Ç: "${fact}" ‚Üí —Ñ–∞–π–ª: ${fileName}`);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ —Ñ–∞–∫—Ç–∞:", err);
  }
}

// üëâ –£–∫–∞–∂–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
const repoOwner = "hhermesa";          // —Ç–≤–æ–π GitHub username
const repoName = "randomCatFacts";     // —Ç–≤–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
const token = "YOUR_GITHUB_TOKEN";     // —Ç–≤–æ–π GitHub token

pushRandomCatFact(repoOwner, repoName, token);
